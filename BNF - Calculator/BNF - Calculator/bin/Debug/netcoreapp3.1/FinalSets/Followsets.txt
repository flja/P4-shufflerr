follow(Prog) = {}
follow(DeckDcls) = {cards}
follow(CardsDef) = {cards}
follow(PlayerDef) = {cards}
follow(TableDef) = {round}
follow(Setup) = {turn}
follow(Round) = {endcondition}
follow(Turn) = {functions}
follow(Endcondition) = {deck}
follow(Functions) = {assign}
follow(Dcls) = {rbrace, player, nonzeroNum, table, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, assignspecifier, dot, actions, endactions, endswitch, colon, enddefault, endaction, endwhile, hyphen, or, void}
follow(Dcl) = {define}
follow(DeckDcl) = {semicolon, define}
follow(NumberDcl) = {semicolon, define}
follow(OptNumberAssign) = {define}
follow(CardDcl) = {define}
follow(HandDcl) = {define}
follow(EnumDcl) = {define}
follow(StringDcl) = {semicolon, define}
follow(OptStringAssign) = {define}
follow(FlagDcl) = {semicolon, define}
follow(OptFlagAssign) = {define}
follow(Deck) = {define}
follow(Add) = {define}
follow(Cards) = {define}
follow(Card) = {define, player, nonzeroNum, table, number, hearts, joker, zero, nonzeronum, neg, stringValue, comma, TRUE, FALSE, break, endcase, star, slash, mod, questionmark, or, and, xor, lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, func, void}
follow(Number) = {define, player, nonzeroNum, table, number, hearts, joker, zero, nonzeronum, neg, stringValue, comma, TRUE, FALSE, break, endcase, star, slash, mod, questionmark, or, and, xor, lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, func, void}
follow(Sign) = {neg}
follow(String) = {define, player, nonzeroNum, table, number, hearts, joker, zero, nonzeronum, neg, stringValue, comma, TRUE, FALSE, break, endcase, star, slash, mod, questionmark, or, and, xor, lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, func, void}
follow(Enum) = {player}
follow(Enum2) = {player}
follow(Enum3) = {player}
follow(Flag) = {define, player, nonzeroNum, table, number, hearts, joker, zero, nonzeronum, neg, stringValue, comma, TRUE, FALSE, break, endcase, star, slash, mod, questionmark, or, and, xor, lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, func, void}
follow(Parameters) = {table}
follow(Val) = {define, player, nonzeroNum, table, number, hearts, joker, zero, nonzeronum, neg, stringValue, comma, TRUE, FALSE, break, endcase, star, slash, mod, questionmark, or, and, xor, lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, func, void}
follow(Stmts) = {player, default, action}
follow(Stmt) = {rbrace, player, nonzeroNum, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, assignspecifier, dot, actions, endactions, endswitch, colon, default, enddefault, action, endaction, endif, while, endwhile, for, hyphen, or, void}
follow(Assignments) = {player}
follow(Assignment) = {rbrace, player, nonzeroNum, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, assignspecifier, dot, actions, endactions, endswitch, colon, default, enddefault, action, endaction, endif, while, endwhile, for, hyphen, or, void}
follow(ObjectSpecifier) = {semicolon, define, player, nonzeroNum, table, number, hearts, joker, zero, nonzeronum, neg, stringValue, comma, TRUE, FALSE, break, endcase, star, slash, mod, questionmark, or, and, xor, lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, func, void}
follow(FollowObject) = {semicolon, define, player, nonzeroNum, table, number, hearts, joker, zero, nonzeronum, neg, stringValue, comma, TRUE, FALSE, break, endcase, star, slash, mod, questionmark, or, and, xor, lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, func, void}
follow(CompoundStmt) = {cards, rbrace, player, nonzeroNum, round, turn, endcondition, functions, deck, id, number, card, hand, string, flag, standard, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, assignspecifier, dot, actions, endactions, switch, endswitch, case, colon, default, enddefault, action, endaction, else, endif, while, endwhile, for, hyphen, or, void, ε}
follow(SelectionStmt) = {rbrace, player, nonzeroNum, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, assignspecifier, dot, actions, endactions, endswitch, colon, default, enddefault, action, endaction, endif, while, endwhile, for, hyphen, or, void}
follow(LabeledStmt) = {rbrace, player, nonzeroNum, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, assignspecifier, dot, actions, endactions, endswitch, colon, default, enddefault, action, endaction, endif, while, endwhile, for, hyphen, or, void}
follow(OptElse) = {rbrace, player, nonzeroNum, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, assignspecifier, dot, actions, endactions, endswitch, colon, default, enddefault, action, endaction, endif, while, endwhile, for, hyphen, or, void}
follow(LoopStmt) = {rbrace, player, nonzeroNum, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, assignspecifier, dot, actions, endactions, endswitch, colon, default, enddefault, action, endaction, endif, while, endwhile, for, hyphen, or, void}
follow(Exprs) = {}
follow(Expr) = {define, nonzeroNum, table, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, endcase, or, void}
follow(AddExpr) = {define, nonzeroNum, table, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, endcase, or, and, xor, lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, func, void}
follow(AddExpr1) = {define, nonzeroNum, table, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, endcase, or, and, xor, lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, func, void}
follow(Term) = {define, nonzeroNum, table, number, hearts, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, endcase, star, or, and, xor, lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, func, void}
follow(Term1) = {define, nonzeroNum, table, number, hearts, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, endcase, star, or, and, xor, lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, func, void}
follow(Factor) = {define, nonzeroNum, table, number, hearts, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, endcase, star, slash, mod, questionmark, or, and, xor, lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, func, void}
follow(LogicalExpr) = {define, nonzeroNum, table, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, endcase, or, void}
follow(LogicalExpr1) = {define, nonzeroNum, table, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, endcase, or, void}
follow(LogicalTerm) = {define, nonzeroNum, table, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, endcase, or, and, xor, lessthan, void}
follow(LogicalTerm1) = {define, nonzeroNum, table, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, endcase, or, and, xor, lessthan, void}
follow(LogicalOperator) = {nonzeroNum, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break}
follow(FunctionCall) = {define, nonzeroNum, table, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, endcase, or, void}
follow(FunctionCall1) = {define, nonzeroNum, table, number, joker, zero, nonzeronum, neg, stringValue, comma, FALSE, break, endcase, or, void}
follow(FunctionsDefs) = {player}
follow(FunctionsDef) = {player, id, card, hand, string, flag, standard, ε}
follow(Type) = {number}
