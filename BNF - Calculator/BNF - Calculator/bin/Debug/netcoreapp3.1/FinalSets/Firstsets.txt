First(Prog) = {define, deck}
First(DeckDcls) = {deck, ε}
First(CardsDef) = {define}
First(PlayerDef) = {define}
First(TableDef) = {define}
First(Setup) = {setup}
First(Round) = {round}
First(Turn) = {turn}
First(Endcondition) = {endcondition}
First(Functions) = {functions}
First(Dcls) = {deck, number, card, hand, enum, string, flag, ε}
First(Dcl) = {deck, number, card, hand, enum, string, flag}
First(DeckDcl) = {deck}
First(NumberDcl) = {number}
First(OptNumberAssign) = {assign, ε}
First(CardDcl) = {card}
First(HandDcl) = {hand}
First(EnumDcl) = {enum}
First(StringDcl) = {string}
First(OptStringAssign) = {assign, ε}
First(FlagDcl) = {flag}
First(OptFlagAssign) = {assign, ε}
First(Deck) = {standard, hearts, spades, diamonds, clubs, cardValue, joker}
First(Add) = {plus, ε}
First(Cards) = {hearts, spades, diamonds, clubs, cardValue, joker}
First(Card) = {cardValue, joker}
First(Number) = {zero, nonzeronum, neg}
First(Sign) = {neg, ε}
First(String) = {stringValue}
First(Enum) = {id}
First(Enum2) = {assign, comma}
First(Enum3) = {comma, ε}
First(Flag) = {TRUE, FALSE}
First(Parameters) = {id, cardValue, joker, zero, nonzeronum, neg, stringValue, TRUE, FALSE, ε}
First(Val) = {id, cardValue, joker, zero, nonzeronum, neg, stringValue, TRUE, FALSE}
First(Stmts) = {lbrace, lparen, id, cardValue, joker, zero, nonzeronum, neg, stringValue, TRUE, FALSE, break, assignspecifier, if, actions, switch, case, default, action, while, for, questionmark, func, ε}
First(Stmt) = {lbrace, lparen, id, cardValue, joker, zero, nonzeronum, neg, stringValue, TRUE, FALSE, break, assignspecifier, if, actions, switch, case, default, action, while, for, questionmark, func}
First(Assignments) = {assignspecifier, ε}
First(Assignment) = {assignspecifier}
First(ObjectSpecifier) = {id}
First(FollowObject) = {dot, ε}
First(CompoundStmt) = {lbrace}
First(SelectionStmt) = {if, actions, switch}
First(LabeledStmt) = {case, default, action}
First(OptElse) = {else, endif}
First(LoopStmt) = {while, for}
First(Exprs) = {lparen, id, cardValue, joker, zero, nonzeronum, neg, stringValue, TRUE, FALSE, questionmark, func, ε}
First(Expr) = {lparen, id, cardValue, joker, zero, nonzeronum, neg, stringValue, TRUE, FALSE, questionmark, func}
First(AddExpr) = {lparen, id, cardValue, joker, zero, nonzeronum, neg, stringValue, TRUE, FALSE}
First(AddExpr1) = {plus, hyphen, ε}
First(Term) = {lparen, id, cardValue, joker, zero, nonzeronum, neg, stringValue, TRUE, FALSE}
First(Term1) = {star, slash, mod, ε}
First(Factor) = {lparen, id, cardValue, joker, zero, nonzeronum, neg, stringValue, TRUE, FALSE}
First(LogicalExpr) = {questionmark}
First(LogicalExpr1) = {or, and, xor, ε}
First(LogicalTerm) = {lparen, id, cardValue, joker, zero, nonzeronum, neg, stringValue, TRUE, FALSE}
First(LogicalTerm1) = {lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal, ε}
First(LogicalOperator) = {lessthan, greaterthan, equal, notequal, lessthanorequal, greaterthanorequal}
First(FunctionCall) = {func}
First(FunctionCall1) = {id}
First(FunctionsDefs) = {deck, number, card, enum, string, flag, void, ε}
First(FunctionsDef) = {deck, number, card, enum, string, flag, void}
First(Type) = {deck, number, card, enum, string, flag, void}
