deck gamedeck = standard;

Define Cards
{
	// Left empty for default values	
}

Define Player(1)
{
	// Left empty since player doesn't hold cards	
}

Define Table
{	
	Deck pileOpen;
	pile.visibility = visible;
	
	for(i = 1; i < 8; i++)	
	{
		Deck tableau[i];
		tableau[i].visibility = hidden;

		Deck tableauTop[i];
		tableauTop[i].visibility = visible;
	}

	for(i = 1; i < 5; i++)
	{
		Deck foundationPile[i];
		foundationPile[i].visibility = visible;
	}	
}

Setup
{
	gamedeck.shuffle;
	
	for(i = 1; i < 8; i++)
	{
		tableau[i].drawfrom(gamedeck) = i;
	}

	for(i = 1; i < 8; i++)
	{
		tableauTop[i].drawfrom(tableau[i]) = 1;		// Ej trÃ¦k tom bunke
	}	
}

Round
{
	
	Endcondition.check;
}

Turn
{
	while(Endcondition =! true)
	{
		Actions
		{
			Move if(true)
			{
				
			}
		}
		
	}
	
}

Endcondition(foundationPile1.cards.value == 91 && foundationPile2.cards.value == 91 && foundationPile3.cards.value == 91 && foundationPile4.cards.value == 91 || Player.newgame)
{
	if(player.newgame)
	{
		winner = 0; 
	} else

	winner = player;
}

func bool Validmove()
{
	
}

-----------------POTENTIEL KONSOL APPLIKATION RIP-------------------------------------------

-	1 	2 	3 	4 	5 	6 	7 	-	-	-	-
	h7	-	
	s6	-
	s8















